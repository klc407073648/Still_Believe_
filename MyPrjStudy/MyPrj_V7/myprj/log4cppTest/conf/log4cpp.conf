#说明：log4cpp 的 category 分为 rootCategory 和其它自定义的 category。
#而每个category都可以输出到多个appender。并且category也是有包含关系的。
#rootCategory就是所有category的根,下述例子中名字分别为son和daughter其父category为sample。 
#son产生的log会写到son和sample的appender中。daughter同理。

#定义 root category 的属性 ,级别为DEBUG，有一个名称为console的appender
log4cpp.rootCategory=DEBUG, console ,mylog

#定义 console 属性 
log4cpp.appender.console=ConsoleAppender 
log4cpp.appender.console.layout=PatternLayout 
log4cpp.appender.console.layout.ConversionPattern=%d [%p] - %m%n 

#定义 mylog appender 的属性 
log4cpp.appender.mylog=FileAppender 
log4cpp.appender.mylog.fileName=./logs/log4cpp/mylog.log 
log4cpp.appender.mylog.layout=PatternLayout 
log4cpp.appender.mylog.layout.ConversionPattern=%d [%p] - %m%n 

#定义 sample category 的属性 
log4cpp.category.sample=ERROR, sample 

#定义 sample appender 的属性 
log4cpp.appender.sample=FileAppender 
log4cpp.appender.sample.fileName=./logs/log4cpp/sample.log 
log4cpp.appender.sample.layout=PatternLayout 
log4cpp.appender.sample.layout.ConversionPattern=%d [%p] - %m%n 

#定义 sample.son category 的属性 
log4cpp.category.sample.son=DEBUG, son 

#定义 son appender 的属性 
log4cpp.appender.son=FileAppender 
log4cpp.appender.son.fileName=./logs/log4cpp/son.log 
log4cpp.appender.son.layout=PatternLayout 
log4cpp.appender.son.layout.ConversionPattern=%d [%p] - %m%n 

#定义 sample.daughter category 的属性 
log4cpp.category.sample.daughter=DEBUG, daughter 

#定义 daughter appender 的属性 
log4cpp.appender.daughter=FileAppender 
log4cpp.appender.daughter.fileName=./logs/log4cpp/daughter.log 
log4cpp.appender.daughter.layout=PatternLayout 
log4cpp.appender.daughter.layout.ConversionPattern=%d [%p] - %m%n 